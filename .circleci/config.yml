version: 2.1


jobs:
  build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: Install dependencies
          command: |
            npm i
      - run:
          name: Backend Build
          command: |
            npm run lint
      - save_cache:
          paths: [node_modules]
          key: backend-build

  test:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run: 
          name: Run Backend Test
          command: |
            npm run test

            
  scan:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run: 
          name: Run Backend Audit
          command: |
            npm audit fix --audit-level=critical

  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --tags project=graphqlDemo \
              --template-file .circleci/files/deploy-infrastructure.yml \
              --stack-name graphqlDemo-backend-${CIRCLE_WORKFLOW_ID:0:7} \
              --parameter-overrides ID=${CIRCLE_WORKFLOW_ID:0:7}

      - run:
          name: Add back-end IP to ansible inventory
          command: |
            aws ec2 describe-instances --filters "Name=tag:Name,Values=*EC2-${CIRCLE_WORKFLOW_ID:0:7}*" --query 'Reservations[*].Instances[*].PublicIpAddress' --output text >> .circleci/ansible/inventory.txt
            cat .circleci/ansible/inventory.txt

      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.txt

  configure-infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run: 
          name: Install dependencies
          command: |
            apk add --update curl tar gzip ansible
            pip install awscli
      - add_ssh_keys:
          fingerprints: [21:c8:e7:41:d8:6c:da:5e:17:32:cf:ca:39:ad:b4:e8]
      - attach_workspace:
          at: ~/
      - run:
          name: Configure server
          command: |
            ansible-playbook -i .circleci/ansible/inventory.txt .circleci/ansible/configure-server.yml

workflows:
  default:
    jobs:
      - build
      - test:
          requires: [build]
      - scan:
          requires: [build]
      - deploy-infrastructure:
          requires: [test, scan]
      - configure-infrastructure:
          requires: [deploy-infrastructure]

